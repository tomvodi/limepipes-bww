// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	structure "github.com/tomvodi/limepipes-plugin-bww/internal/structure"
)

// StructureParser is an autogenerated mock type for the StructureParser type
type StructureParser struct {
	mock.Mock
}

type StructureParser_Expecter struct {
	mock *mock.Mock
}

func (_m *StructureParser) EXPECT() *StructureParser_Expecter {
	return &StructureParser_Expecter{mock: &_m.Mock}
}

// ParseDocumentStructure provides a mock function with given fields: data
func (_m *StructureParser) ParseDocumentStructure(data []byte) (*structure.BwwFile, error) {
	ret := _m.Called(data)

	if len(ret) == 0 {
		panic("no return value specified for ParseDocumentStructure")
	}

	var r0 *structure.BwwFile
	var r1 error
	if rf, ok := ret.Get(0).(func([]byte) (*structure.BwwFile, error)); ok {
		return rf(data)
	}
	if rf, ok := ret.Get(0).(func([]byte) *structure.BwwFile); ok {
		r0 = rf(data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*structure.BwwFile)
		}
	}

	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StructureParser_ParseDocumentStructure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ParseDocumentStructure'
type StructureParser_ParseDocumentStructure_Call struct {
	*mock.Call
}

// ParseDocumentStructure is a helper method to define mock.On call
//   - data []byte
func (_e *StructureParser_Expecter) ParseDocumentStructure(data interface{}) *StructureParser_ParseDocumentStructure_Call {
	return &StructureParser_ParseDocumentStructure_Call{Call: _e.mock.On("ParseDocumentStructure", data)}
}

func (_c *StructureParser_ParseDocumentStructure_Call) Run(run func(data []byte)) *StructureParser_ParseDocumentStructure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *StructureParser_ParseDocumentStructure_Call) Return(_a0 *structure.BwwFile, _a1 error) *StructureParser_ParseDocumentStructure_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *StructureParser_ParseDocumentStructure_Call) RunAndReturn(run func([]byte) (*structure.BwwFile, error)) *StructureParser_ParseDocumentStructure_Call {
	_c.Call.Return(run)
	return _c
}

// NewStructureParser creates a new instance of StructureParser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStructureParser(t interface {
	mock.TestingT
	Cleanup(func())
}) *StructureParser {
	mock := &StructureParser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
